'use strict';

module.exports = {
  async up(queryInterface, Sequelize) {
    await queryInterface.bulkInsert('Answers', [
      // Ответы для задачи 1
      {
        id: 3,
        taskId: 1,
        content: 'Переменная — это метод объекта.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 2,
        taskId: 1,
        content: 'Переменная — это контейнер для хранения данных.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 1,
        taskId: 1,
        content: 'Переменная — это событие в DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 2
      {
        id: 5,
        taskId: 2,
        content: 'Number, String, Boolean, Null, Undefined, Symbol, Object.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 6,
        taskId: 2,
        content: 'Array, Function, Promise.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 4,
        taskId: 2,
        content: 'DOM, Event, Node.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 3
      {
        id: 8,
        taskId: 3,
        content: 'undefined обозначает, что переменная содержит null.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 9,
        taskId: 3,
        content: 'undefined обозначает ошибку в коде.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 7,
        taskId: 3,
        content: 'undefined обозначает, что значение переменной не было задано.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 4
      {
        id: 11,
        taskId: 4,
        content: 'Замыкание позволяет функции запоминать своё лексическое окружение.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 10,
        taskId: 4,
        content: 'Замыкание создаёт новый объект в памяти.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 12,
        taskId: 4,
        content: 'Замыкание используется для работы с DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 5
      {
        id: 15,
        taskId: 5,
        content: 'Функции высшего порядка принимают другие функции как аргументы.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 14,
        taskId: 5,
        content: 'Функции высшего порядка возвращают промисы.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 13,
        taskId: 5,
        content: 'Функции высшего порядка работают только с массивами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 6
      {
        id: 17,
        taskId: 6,
        content:
          '`var` имеет функциональную область видимости, а `let` и `const` — блочную.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 16,
        taskId: 6,
        content: '`var`, `let` и `const` имеют одинаковую область видимости.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 18,
        taskId: 6,
        content: '`const` можно переназначать после инициализации.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 7
      {
        id: 21,
        taskId: 7,
        content:
          'Каррирование — это процесс преобразования функции с несколькими аргументами в цепочку функций.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 19,
        taskId: 7,
        content: 'Каррирование — это метод работы с массивами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 20,
        taskId: 7,
        content: 'Каррирование — это процесс клонирования объектов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 8
      {
        id: 22,
        taskId: 8,
        content: 'Event Loop позволяет асинхронным операциям выполняться в JavaScript.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 23,
        taskId: 8,
        content: 'Event Loop отвечает за рендеринг DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 24,
        taskId: 8,
        content: 'Event Loop обрабатывает только события браузера.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 9
      {
        id: 25,
        taskId: 9,
        content:
          'Прототипное наследование позволяет объектам наследовать свойства других объектов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 27,
        taskId: 9,
        content: 'Прототипное наследование создаёт глубокую копию объектов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 26,
        taskId: 9,
        content: 'Прототипное наследование работает только с массивами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 30,
        taskId: 10,
        content: 'JSX — это синтаксический сахар для написания элементов React.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 29,
        taskId: 10,
        content: 'JSX — это библиотека для работы с DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 28,
        taskId: 10,
        content: 'JSX — это плагин для Babel.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 11
      {
        id: 33,
        taskId: 11,
        content: 'Компоненты — это функции, которые возвращают элементы React.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 31,
        taskId: 11,
        content: 'Компоненты — это методы для работы с состоянием.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 32,
        taskId: 11,
        content: 'Компоненты — это части HTML, созданные React.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 12
      {
        id: 35,
        taskId: 12,
        content: 'Props позволяют передавать данные в компоненты.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 34,
        taskId: 12,
        content: 'Props используются для управления состоянием компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 36,
        taskId: 12,
        content: 'Props позволяют работать с DOM напрямую.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 13
      {
        id: 39,
        taskId: 13,
        content:
          '`useState` возвращает массив с текущим значением и функцией обновления.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 38,
        taskId: 13,
        content: '`useState` обновляет DOM напрямую.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 37,
        taskId: 13,
        content: '`useState` работает только в классовых компонентах.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 14
      {
        id: 40,
        taskId: 14,
        content: '`useEffect` используется для выполнения побочных эффектов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 41,
        taskId: 14,
        content: '`useEffect` управляет состоянием компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 42,
        taskId: 14,
        content: '`useEffect` используется только для событий.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 15
      {
        id: 44,
        taskId: 15,
        content: 'События передаются как функции в атрибутах, например, `onClick`.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 43,
        taskId: 15,
        content: 'События обрабатываются только внутри useEffect.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 45,
        taskId: 15,
        content: 'React автоматически генерирует обработчики событий.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 16
      {
        id: 48,
        taskId: 16,
        content: 'Виртуальный DOM минимизирует изменения в реальном DOM.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 46,
        taskId: 16,
        content: 'Виртуальный DOM создаёт прямое отображение в реальном DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 47,
        taskId: 16,
        content: 'Виртуальный DOM работает только с хуками.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 17
      {
        id: 51,
        taskId: 17,
        content: 'Context API используется для передачи данных между компонентами.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 50,
        taskId: 17,
        content: 'Context API заменяет Redux полностью.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 49,
        taskId: 17,
        content: 'Context API используется для работы с сервером.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 18
      {
        id: 52,
        taskId: 18,
        content:
          'Фрагменты позволяют группировать элементы без создания дополнительного DOM-узла.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 54,
        taskId: 18,
        content: 'Фрагменты используются только для стилизации компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 53,
        taskId: 18,
        content: 'Фрагменты позволяют работать с событиями.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 57,
        taskId: 19,
        content: 'Redux — это библиотека для управления состоянием приложения.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 56,
        taskId: 19,
        content: 'Redux — это библиотека для работы с DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 55,
        taskId: 19,
        content: 'Redux используется для стилизации компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 20
      {
        id: 59,
        taskId: 20,
        content: 'Store хранит состояние приложения.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 58,
        taskId: 20,
        content: 'Store управляет событиями DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 60,
        taskId: 20,
        content: 'Store используется для обработки CSS.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 21
      {
        id: 63,
        taskId: 21,
        content: 'Action — это объект, описывающий, что нужно изменить в состоянии.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 62,
        taskId: 21,
        content: 'Action — это метод для изменения состояния.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 61,
        taskId: 21,
        content: 'Action используется для вызова API.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 22
      {
        id: 66,
        taskId: 22,
        content: 'Reducer — это чистая функция, принимающая состояние и Action.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 65,
        taskId: 22,
        content: 'Reducer — это метод компонента.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 64,
        taskId: 22,
        content: 'Reducer используется для стилизации компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 23
      {
        id: 68,
        taskId: 23,
        content: 'Redux подключается к React через Provider.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 67,
        taskId: 23,
        content: 'Redux автоматически интегрируется с React.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 69,
        taskId: 23,
        content: 'Redux требует использования DOM API.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 24
      {
        id: 72,
        taskId: 24,
        content: 'Middleware перехватывают Actions перед их обработкой Reducer-ами.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 71,
        taskId: 24,
        content: 'Middleware обновляют DOM напрямую.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 70,
        taskId: 24,
        content: 'Middleware используются только для асинхронных операций.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 25
      {
        id: 73,
        taskId: 25,
        content: 'Thunk позволяет писать асинхронные Action Creators.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 74,
        taskId: 25,
        content: 'Thunk используется для рендера компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 75,
        taskId: 25,
        content: 'Thunk работает только с хуками React.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 26
      {
        id: 78,
        taskId: 26,
        content: 'Асинхронные действия обрабатываются через Middleware.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 77,
        taskId: 26,
        content: 'Асинхронные действия требуют использования классов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 76,
        taskId: 26,
        content: 'Асинхронные действия работают только с Redux Toolkit.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 27
      {
        id: 80,
        taskId: 27,
        content: 'Redux Toolkit предоставляет упрощённый API для работы с Redux.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 79,
        taskId: 27,
        content: 'Redux Toolkit заменяет React полностью.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 81,
        taskId: 27,
        content: 'Redux Toolkit требует использования классовых компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 84,
        taskId: 28,
        content: '"use strict" включает строгий режим выполнения кода.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 83,
        taskId: 28,
        content: '"use strict" отключает все ошибки в JavaScript.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 82,
        taskId: 28,
        content: '"use strict" ускоряет выполнение JavaScript-кода.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 29
      {
        id: 86,
        taskId: 29,
        content: 'Массив создаётся с помощью `[]`.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 85,
        taskId: 29,
        content: 'Массив создаётся с помощью `{}`.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 87,
        taskId: 29,
        content: 'Массив создаётся с помощью `<>`.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 30
      {
        id: 90,
        taskId: 30,
        content:
          'typeof null возвращает "object" из-за особенностей ранней реализации JavaScript.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 89,
        taskId: 30,
        content: 'typeof null возвращает "null".',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 88,
        taskId: 30,
        content: 'typeof null возвращает "undefined".',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 31
      {
        id: 91,
        taskId: 31,
        content: 'Глубокое клонирование создаёт копию объекта с вложенными объектами.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 92,
        taskId: 31,
        content: 'Глубокое клонирование копирует только свойства верхнего уровня.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 93,
        taskId: 31,
        content: 'Глубокое клонирование создаёт новую ссылку на исходный объект.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 32
      {
        id: 95,
        taskId: 32,
        content: 'Деструктуризация позволяет извлекать значения из объектов и массивов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 94,
        taskId: 32,
        content: 'Деструктуризация изменяет исходный объект.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 96,
        taskId: 32,
        content: 'Деструктуризация доступна только в ES5.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 33
      {
        id: 98,
        taskId: 33,
        content: 'Array.map создаёт новый массив, применяя функцию к каждому элементу.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 97,
        taskId: 33,
        content: 'Array.map изменяет исходный массив.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 99,
        taskId: 33,
        content: 'Array.map используется для фильтрации массива.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 34
      {
        id: 102,
        taskId: 34,
        content: 'Proxy позволяет перехватывать операции над объектами.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 101,
        taskId: 34,
        content: 'Proxy используется для создания событий.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 100,
        taskId: 34,
        content: 'Proxy ускоряет выполнение функций.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 35
      {
        id: 104,
        taskId: 35,
        content: 'Генераторы возвращают объект с методом next().',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 103,
        taskId: 35,
        content: 'Генераторы работают только с массивами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 105,
        taskId: 35,
        content: 'Генераторы используются только для асинхронных операций.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 36
      {
        id: 108,
        taskId: 36,
        content: 'В стрелочных функциях "this" наследуется из внешнего контекста.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 107,
        taskId: 36,
        content: 'В стрелочных функциях "this" всегда равно undefined.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 106,
        taskId: 36,
        content: 'В стрелочных функциях "this" определяется в момент вызова.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Вопрос 37

      {
        id: 111,
        taskId: 37,
        content:
          'React.Fragment позволяет рендерить несколько элементов без дополнительного узла в DOM.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 110,
        taskId: 37,
        content: 'React.Fragment используется для работы с состоянием.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 109,
        taskId: 37,
        content: 'React.Fragment добавляет новые атрибуты к элементам.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 38
      {
        id: 114,
        taskId: 38,
        content: 'Атрибут "key" помогает React эффективно обновлять список элементов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 113,
        taskId: 38,
        content: 'Атрибут "key" используется для передачи данных между компонентами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 112,
        taskId: 38,
        content: 'Атрибут "key" определяет стиль элементов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 39
      {
        id: 116,
        taskId: 39,
        content:
          'Обработчики событий в React передаются как функции, например, onClick={() => {}}.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 115,
        taskId: 39,
        content: 'Обработчики событий в React создаются автоматически.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 117,
        taskId: 39,
        content: 'Обработчики событий работают только с хуками.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 40
      {
        id: 118,
        taskId: 40,
        content: '`useReducer` используется для управления сложным состоянием.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 119,
        taskId: 40,
        content: '`useReducer` заменяет useEffect.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 120,
        taskId: 40,
        content: '`useReducer` работает только в классовых компонентах.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 41
      {
        id: 122,
        taskId: 41,
        content: 'React.memo предотвращает ненужный ререндер компонентов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 121,
        taskId: 41,
        content: 'React.memo используется для создания мемоизированных значений.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 123,
        taskId: 41,
        content: 'React.memo добавляет состояния к компоненту.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 42
      {
        id: 126,
        taskId: 42,
        content: 'StrictMode позволяет находить потенциальные проблемы в приложении.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 125,
        taskId: 42,
        content: 'StrictMode управляет состоянием приложения.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 124,
        taskId: 42,
        content: 'StrictMode предотвращает ошибки в коде.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 43
      {
        id: 127,
        taskId: 43,
        content: 'SSR позволяет рендерить HTML на сервере перед передачей клиенту.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 128,
        taskId: 43,
        content: 'SSR используется для создания стилей.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 129,
        taskId: 43,
        content: 'SSR работает только с хуками React.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 44
      {
        id: 131,
        taskId: 44,
        content: 'Hydration — это процесс синхронизации HTML и React.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 130,
        taskId: 44,
        content: 'Hydration обновляет состояние компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 132,
        taskId: 44,
        content: 'Hydration рендерит новые элементы.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 45
      {
        id: 134,
        taskId: 45,
        content:
          'Concurrent Mode улучшает пользовательский опыт за счёт асинхронного рендеринга.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 133,
        taskId: 45,
        content: 'Concurrent Mode предотвращает ошибки в компонентах.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 135,
        taskId: 45,
        content: 'Concurrent Mode управляет состоянием компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 46
      {
        id: 137,
        taskId: 46,
        content: 'Redux DevTools позволяют отслеживать изменения состояния.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 136,
        taskId: 46,
        content: 'Redux DevTools автоматизируют рендеринг компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 138,
        taskId: 46,
        content: 'Redux DevTools обновляют DOM напрямую.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Вопрос 47
      {
        id: 141,
        taskId: 47,
        content: 'Состояние в Redux обновляется через Reducer на основе Action.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 140,
        taskId: 47,
        content: 'Состояние в Redux обновляется автоматически.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 139,
        taskId: 47,
        content: 'Состояние в Redux обновляется через события DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 48
      {
        id: 142,
        taskId: 48,
        content: 'Selector позволяет извлекать данные из Store.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 143,
        taskId: 48,
        content: 'Selector обновляет Store.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 144,
        taskId: 48,
        content: 'Selector используется только для асинхронных действий.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 49
      {
        id: 147,
        taskId: 49,
        content: 'Redux Toolkit упрощает создание Slice и Thunks.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 146,
        taskId: 49,
        content: 'Redux Toolkit используется только для серверных приложений.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 145,
        taskId: 49,
        content: 'Redux Toolkit требует использования классовых компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 50
      {
        id: 150,
        taskId: 50,
        content: 'Slice — это набор Reducer и Actions для конкретного состояния.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 149,
        taskId: 50,
        content: 'Slice используется для работы с хуками.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 148,
        taskId: 50,
        content: 'Slice автоматически обновляет состояние DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 51
      {
        id: 152,
        taskId: 51,
        content: '`createAsyncThunk` позволяет создавать асинхронные Thunks.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 151,
        taskId: 51,
        content: '`createAsyncThunk` создаёт синхронные действия.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 153,
        taskId: 51,
        content: '`createAsyncThunk` используется для обработки событий DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 52
      {
        id: 156,
        taskId: 52,
        content: 'reselect позволяет создавать мемоизированные Selectors.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 155,
        taskId: 52,
        content: 'reselect используется для обновления состояния.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 154,
        taskId: 52,
        content: 'reselect работает только с хуками React.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 53
      {
        id: 159,
        taskId: 53,
        content:
          'Кастомные Middleware создаются как функции, принимающие `store` и `next`.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 158,
        taskId: 53,
        content: 'Кастомные Middleware создаются только в Redux Toolkit.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 157,
        taskId: 53,
        content: 'Кастомные Middleware используются для работы с DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 54
      {
        id: 161,
        taskId: 54,
        content:
          'Производительность Redux можно оптимизировать с помощью мемоизации Selectors.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 160,
        taskId: 54,
        content:
          'Производительность Redux оптимизируется автоматическим обновлением Store.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 162,
        taskId: 54,
        content: 'Производительность Redux зависит только от DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 55
      {
        id: 163,
        taskId: 55,
        content:
          'Функция создаётся с помощью ключевого слова `function` или стрелочной нотации.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 164,
        taskId: 55,
        content: 'Функция создаётся только через `function`.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 165,
        taskId: 55,
        content: 'Функция создаётся только через стрелочную нотацию.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Вопрос 56
      {
        id: 166,
        taskId: 56,
        content: 'console.log используется для вывода данных в консоль.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 167,
        taskId: 56,
        content: 'console.log используется для управления событиями.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 168,
        taskId: 56,
        content: 'console.log используется для стилизации элементов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 57
      {
        id: 170,
        taskId: 57,
        content: 'Объект создаётся с помощью {}.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 169,
        taskId: 57,
        content: 'Объект создаётся с помощью [].',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 171,
        taskId: 57,
        content: 'Объект создаётся с помощью "". ',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 58
      {
        id: 173,
        taskId: 58,
        content: '"for...of" позволяет перебирать итеративные объекты.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 172,
        taskId: 58,
        content: '"for...of" используется для создания объектов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 174,
        taskId: 58,
        content: '"for...of" работает только с массивами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 59
      {
        id: 176,
        taskId: 59,
        content: 'Промисы позволяют обрабатывать асинхронные операции.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 175,
        taskId: 59,
        content: 'Промисы используются для создания событий.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 177,
        taskId: 59,
        content: 'Промисы работают только с JSON.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 60
      {
        id: 180,
        taskId: 60,
        content: 'async/await упрощает работу с асинхронными функциями.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 179,
        taskId: 60,
        content: 'async/await работает только с промисами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 178,
        taskId: 60,
        content: 'async/await создаёт синхронные операции.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 61
      {
        id: 182,
        taskId: 61,
        content: 'Модульная система позволяет экспортировать и импортировать функции.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 181,
        taskId: 61,
        content: 'Модульная система создаёт копии объектов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 183,
        taskId: 61,
        content: 'Модульная система используется для работы с DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 62
      {
        id: 184,
        taskId: 62,
        content: 'debounce ограничивает частоту вызова функции.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 185,
        taskId: 62,
        content: 'debounce делает функции асинхронными.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 186,
        taskId: 62,
        content: 'debounce используется для создания промисов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 63
      {
        id: 189,
        taskId: 63,
        content: 'Symbol создаёт уникальные идентификаторы.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 188,
        taskId: 63,
        content: 'Symbol используется для работы с событиями.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 187,
        taskId: 63,
        content: 'Symbol добавляет новые методы к объектам.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 64
      {
        id: 191,
        taskId: 64,
        content: 'React-компоненты создаются с помощью функций или классов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 190,
        taskId: 64,
        content: 'React-компоненты создаются только через классы.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 192,
        taskId: 64,
        content: 'React-компоненты автоматически генерируются.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 65
      {
        id: 194,
        taskId: 65,
        content: 'State — это объект, хранящий динамические данные компонента.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 193,
        taskId: 65,
        content: 'State используется для работы с DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 195,
        taskId: 65,
        content: 'State обновляется только через props.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 66
      {
        id: 198,
        taskId: 66,
        content: 'Списки в React рендерятся с помощью метода map().',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 197,
        taskId: 66,
        content: 'Списки в React рендерятся через forEach().',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 196,
        taskId: 66,
        content: 'Списки в React рендерятся автоматически.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Вопрос 67
      {
        id: 199,
        taskId: 67,
        content:
          'useContext позволяет использовать контекст в функциональных компонентах.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 200,
        taskId: 67,
        content: 'useContext используется для работы с состоянием DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 201,
        taskId: 67,
        content: 'useContext управляет асинхронными действиями.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 68
      {
        id: 203,
        taskId: 68,
        content:
          'HOC (Higher Order Component) — это функция, принимающая компонент и возвращающая новый компонент.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 202,
        taskId: 68,
        content: 'HOC — это хук для управления состоянием.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 204,
        taskId: 68,
        content: 'HOC автоматически создаёт компоненты.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 69
      {
        id: 207,
        taskId: 69,
        content:
          'State в React обновляется через вызов setState или функции из useState.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 206,
        taskId: 69,
        content: 'State обновляется через прямое присваивание значения.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 205,
        taskId: 69,
        content: 'State обновляется только в классовых компонентах.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 70
      {
        id: 210,
        taskId: 70,
        content: 'React Reconciliation отвечает за сравнение и обновление DOM-дерева.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 209,
        taskId: 70,
        content: 'React Reconciliation управляет стилями компонентов.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 208,
        taskId: 70,
        content: 'React Reconciliation автоматически создаёт хуки.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 71
      {
        id: 211,
        taskId: 71,
        content: 'Error Boundaries позволяют перехватывать ошибки в React-компонентах.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 212,
        taskId: 71,
        content: 'Error Boundaries управляют состоянием компонента.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 213,
        taskId: 71,
        content: 'Error Boundaries используются для работы с событиями.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 72
      {
        id: 215,
        taskId: 72,
        content: 'Suspense позволяет реализовать ленивую загрузку компонентов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 214,
        taskId: 72,
        content: 'Suspense обновляет DOM напрямую.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 216,
        taskId: 72,
        content: 'Suspense используется для работы с хуками.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 73
      {
        id: 218,
        taskId: 73,
        content: 'Action Creator создаёт Actions для Redux.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 217,
        taskId: 73,
        content: 'Action Creator управляет состоянием Redux.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 219,
        taskId: 73,
        content: 'Action Creator используется для создания хуков.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 74
      {
        id: 220,
        taskId: 74,
        content: 'Начальное состояние задаётся в Reducer или Slice.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 221,
        taskId: 74,
        content: 'Начальное состояние задаётся через setState.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 222,
        taskId: 74,
        content: 'Начальное состояние создаётся автоматически Redux.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 75
      {
        id: 225,
        taskId: 75,
        content: 'На изменения Store можно подписаться с помощью функции subscribe.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 224,
        taskId: 75,
        content: 'Подписка на Store возможна только через хуки.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 223,
        taskId: 75,
        content: 'Store автоматически уведомляет все компоненты.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 76
      {
        id: 227,
        taskId: 76,
        content: 'DevTools можно включить через middleware Redux Toolkit.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 226,
        taskId: 76,
        content: 'DevTools автоматически подключаются к React.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 228,
        taskId: 76,
        content: 'DevTools управляют состоянием Redux.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 77
      {
        id: 229,
        taskId: 77,
        content: 'Immer используется для создания неизменяемого состояния.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 230,
        taskId: 77,
        content: 'Immer добавляет хуки в React.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 231,
        taskId: 77,
        content: 'Immer обновляет DOM напрямую.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 78
      {
        id: 234,
        taskId: 78,
        content: 'combineReducers объединяет несколько Reducer-ов в один.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 233,
        taskId: 78,
        content: 'combineReducers управляет состоянием Redux.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 232,
        taskId: 78,
        content: 'combineReducers используется только для асинхронных операций.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 79
      {
        id: 237,
        taskId: 79,
        content: 'Динамические Reducer-ы добавляются через store.replaceReducer().',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 236,
        taskId: 79,
        content: 'Динамические Reducer-ы обновляют DOM.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 235,
        taskId: 79,
        content: 'Динамические Reducer-ы создаются автоматически.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // ВОпрос 80
      {
        id: 239,
        taskId: 80,
        content: 'Redux Saga обрабатывает сайд-эффекты с помощью генераторов.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 238,
        taskId: 80,
        content: 'Redux Saga обновляет DOM напрямую.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 240,
        taskId: 80,
        content: 'Redux Saga используется для создания хуков.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Вопрос 81
      {
        id: 243,
        taskId: 81,
        content: 'Undo/Redo реализуется через хранение истории изменений состояния.',
        isCorrect: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 242,
        taskId: 81,
        content: 'Undo/Redo автоматически создаётся Redux Toolkit.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 241,
        taskId: 81,
        content: 'Undo/Redo работает только с React-компонентами.',
        isCorrect: false,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.bulkDelete('Answers', null, {});
  },
};

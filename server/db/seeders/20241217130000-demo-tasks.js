'use strict';

module.exports = {
  async up(queryInterface, Sequelize) {
    await queryInterface.bulkInsert('Tasks', [
      // Модуль 1: Основы JavaScript
      // Easy
      {
        id: 1,
        moduleId: 1,
        title: 'Что такое переменная?',
        description: 'Опишите, как объявить переменную в JavaScript.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 2,
        moduleId: 1,
        title: 'Какие есть типы данных?',
        description: 'Перечислите основные типы данных в JavaScript.',
        type: 'multiple_choice',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 3,
        moduleId: 1,
        title: 'Какое значение имеет `undefined`?',
        description: 'Опишите, что обозначает `undefined` в JavaScript.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 4,
        moduleId: 1,
        title: 'Что такое замыкание?',
        description: 'Объясните, как работает замыкание.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 5,
        moduleId: 1,
        title: 'Как работают функции высшего порядка?',
        description: 'Приведите пример функции высшего порядка.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 6,
        moduleId: 1,
        title: 'Объясните разницу между `var`, `let` и `const`.',
        description: 'Когда использовать `var`, `let` и `const`?',
        type: 'multiple_choice',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 7,
        moduleId: 1,
        title: 'Что такое "каррирование"?',
        description: 'Опишите концепцию каррирования в JavaScript.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 8,
        moduleId: 1,
        title: 'Как работает Event Loop?',
        description: 'Объясните работу Event Loop в JavaScript.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 9,
        moduleId: 1,
        title: 'Что такое прототипное наследование?',
        description: 'Опишите концепцию прототипного наследования.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Модуль 2: Основы React
      // Easy
      {
        id: 10,
        moduleId: 2,
        title: 'Что такое JSX?',
        description: 'Объясните, зачем используется JSX.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 11,
        moduleId: 2,
        title: 'Как создать компонент?',
        description: 'Напишите простой функциональный компонент.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 12,
        moduleId: 2,
        title: 'Что такое Props?',
        description: 'Опишите, как передать данные в компонент через Props.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 13,
        moduleId: 2,
        title: 'Как работает `useState`?',
        description: 'Объясните принцип работы хука `useState`.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 14,
        moduleId: 2,
        title: 'Что такое `useEffect`?',
        description: 'Опишите основные кейсы использования `useEffect`.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 15,
        moduleId: 2,
        title: 'Как передавать события?',
        description: 'Опишите, как обрабатывать события в React.',
        type: 'multiple_choice',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 16,
        moduleId: 2,
        title: 'Что такое "виртуальный DOM"?',
        description: 'Объясните, как работает виртуальный DOM.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 17,
        moduleId: 2,
        title: 'Как работает Context API?',
        description: 'Объясните, как работает Context API в React.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 18,
        moduleId: 2,
        title: 'Что такое фрагменты?',
        description: 'Объясните, зачем нужны фрагменты в React.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Модуль 3: Работа с Redux
      // Easy
      {
        id: 19,
        moduleId: 3,
        title: 'Что такое Redux?',
        description: 'Объясните, зачем используется Redux.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 20,
        moduleId: 3,
        title: 'Как работает Store?',
        description: 'Опишите принцип работы Store в Redux.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 21,
        moduleId: 3,
        title: 'Что такое Action?',
        description: 'Объясните, что такое Action в Redux.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 22,
        moduleId: 3,
        title: 'Что делает Reducer?',
        description: 'Опишите, как работает Reducer в Redux.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 23,
        moduleId: 3,
        title: 'Как подключить Redux к React?',
        description: 'Опишите, как использовать Redux с React.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 24,
        moduleId: 3,
        title: 'Как работают Middleware?',
        description: 'Объясните, зачем нужны Middleware в Redux.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 25,
        moduleId: 3,
        title: 'Что такое Thunk?',
        description: 'Опишите принцип работы Redux Thunk.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 26,
        moduleId: 3,
        title: 'Как реализовать асинхронные действия?',
        description: 'Опишите, как обрабатывать асинхронные действия в Redux.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 27,
        moduleId: 3,
        title: 'Что такое Redux Toolkit?',
        description: 'Объясните основные возможности Redux Toolkit.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 28,
        moduleId: 1,
        title: 'Что такое "use strict"?',
        description: 'Объясните, зачем используется "use strict" в JavaScript.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 29,
        moduleId: 1,
        title: 'Как объявить массив?',
        description: 'Напишите пример объявления массива в JavaScript.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 30,
        moduleId: 1,
        title: 'Какой тип данных возвращает typeof null?',
        description: 'Объясните, почему typeof null возвращает "object".',
        type: 'multiple_choice',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 31,
        moduleId: 1,
        title: 'Что такое глубокое клонирование объектов?',
        description: 'Объясните, как создать глубокую копию объекта.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 32,
        moduleId: 1,
        title: 'Как работает деструктуризация?',
        description: 'Приведите примеры деструктуризации объектов и массивов.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 33,
        moduleId: 1,
        title: 'Как работает метод Array.map()?',
        description: 'Объясните принцип работы метода Array.map().',
        type: 'multiple_choice',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 34,
        moduleId: 1,
        title: 'Как работает объект Proxy?',
        description: 'Опишите, как использовать объект Proxy для перехвата операций.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 35,
        moduleId: 1,
        title: 'Что такое генераторы?',
        description: 'Объясните, как работают генераторы в JavaScript.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 36,
        moduleId: 1,
        title: 'Как работает "this" в стрелочных функциях?',
        description: 'Объясните разницу между "this" в стрелочных и обычных функциях.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Модуль 2: Основы React
      // Easy
      {
        id: 37,
        moduleId: 2,
        title: 'Что такое React.Fragment?',
        description: 'Объясните, зачем использовать React.Fragment.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 38,
        moduleId: 2,
        title: 'Что такое "key" в списках React?',
        description: 'Объясните значение атрибута "key" при рендере списков.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 39,
        moduleId: 2,
        title: 'Как задать обработчик событий в React?',
        description: 'Приведите пример добавления события "onClick".',
        type: 'multiple_choice',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 40,
        moduleId: 2,
        title: 'Как использовать `useReducer`?',
        description: 'Опишите, когда использовать хук `useReducer` вместо `useState`.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 41,
        moduleId: 2,
        title: 'Как работают мемоизированные компоненты?',
        description: 'Объясните, как и зачем использовать React.memo.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 42,
        moduleId: 2,
        title: 'Что такое StrictMode?',
        description: 'Объясните, как работает StrictMode в React.',
        type: 'multiple_choice',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 43,
        moduleId: 2,
        title: 'Как работает рендеринг на сервере (SSR)?',
        description: 'Объясните принцип работы SSR в React.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 44,
        moduleId: 2,
        title: 'Что такое Hydration?',
        description: 'Опишите, как происходит процесс Hydration в React.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 45,
        moduleId: 2,
        title: 'Как работает Concurrent Mode?',
        description: 'Объясните преимущества Concurrent Mode в React.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Модуль 3: Работа с Redux
      // Easy
      {
        id: 46,
        moduleId: 3,
        title: 'Что такое Redux DevTools?',
        description: 'Опишите, как использовать Redux DevTools.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 47,
        moduleId: 3,
        title: 'Как обновляется состояние в Redux?',
        description: 'Опишите, как Action изменяет состояние через Reducer.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 48,
        moduleId: 3,
        title: 'Что такое Selector?',
        description: 'Объясните, зачем использовать Selectors в Redux.',
        type: 'multiple_choice',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 49,
        moduleId: 3,
        title: 'Как работает Redux Toolkit?',
        description: 'Объясните ключевые особенности Redux Toolkit.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 50,
        moduleId: 3,
        title: 'Что такое Slice в Redux Toolkit?',
        description: 'Опишите, как создаётся Slice в Redux Toolkit.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 51,
        moduleId: 3,
        title: 'Как работает `createAsyncThunk`?',
        description: 'Объясните принцип работы `createAsyncThunk` в Redux Toolkit.',
        type: 'multiple_choice',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 52,
        moduleId: 3,
        title: 'Что такое reselect?',
        description: 'Объясните, зачем использовать библиотеку reselect с Redux.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 53,
        moduleId: 3,
        title: 'Как настроить кастомные Middleware?',
        description: 'Приведите пример создания Middleware в Redux.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 54,
        moduleId: 3,
        title: 'Как оптимизировать производительность Redux?',
        description: 'Опишите основные методы оптимизации производительности в Redux.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 55,
        moduleId: 1,
        title: 'Как объявить функцию?',
        description: 'Напишите пример объявления функции в JavaScript.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 56,
        moduleId: 1,
        title: 'Что такое "console.log"?',
        description: 'Объясните, зачем используется console.log.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 57,
        moduleId: 1,
        title: 'Как создать объект?',
        description: 'Приведите пример создания объекта в JavaScript.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 58,
        moduleId: 1,
        title: 'Как работает "for...of"?',
        description: 'Объясните, как использовать цикл "for...of".',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 59,
        moduleId: 1,
        title: 'Что такое промисы?',
        description: 'Объясните, как работают промисы в JavaScript.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 60,
        moduleId: 1,
        title: 'Как работает async/await?',
        description: 'Приведите пример использования async/await.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 61,
        moduleId: 1,
        title: 'Что такое модульная система в JavaScript?',
        description: 'Объясните, как работают модули ES6.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 62,
        moduleId: 1,
        title: 'Как работает "debounce"?',
        description: 'Приведите пример реализации функции "debounce".',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 63,
        moduleId: 1,
        title: 'Что такое "Symbol"?',
        description: 'Опишите, как использовать "Symbol" в JavaScript.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Модуль 2: Основы React
      // Easy
      {
        id: 64,
        moduleId: 2,
        title: 'Какой базовый компонент в React?',
        description: 'Напишите пример простого компонента.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 65,
        moduleId: 2,
        title: 'Что такое состояние компонента?',
        description: 'Объясните, что такое state в React.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 66,
        moduleId: 2,
        title: 'Как рендерить список?',
        description: 'Приведите пример рендера списка в React.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 67,
        moduleId: 2,
        title: 'Как использовать "useContext"?',
        description: 'Опишите, как использовать хук "useContext".',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 68,
        moduleId: 2,
        title: 'Что такое HOC (Higher Order Component)?',
        description: 'Объясните, зачем использовать HOC.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 69,
        moduleId: 2,
        title: 'Как обновить state?',
        description: 'Приведите пример обновления состояния в React.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 70,
        moduleId: 2,
        title: 'Как работает React Reconciliation?',
        description: 'Опишите, как React сравнивает деревья компонентов.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 71,
        moduleId: 2,
        title: 'Что такое Error Boundaries?',
        description: 'Объясните, зачем нужны Error Boundaries.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 72,
        moduleId: 2,
        title: 'Как работает Suspense?',
        description: 'Опишите использование Suspense для ленивой загрузки.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },

      // Модуль 3: Работа с Redux
      // Easy
      {
        id: 73,
        moduleId: 3,
        title: 'Что такое Action Creator?',
        description: 'Опишите, зачем нужны Action Creators.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 74,
        moduleId: 3,
        title: 'Что такое начальное состояние в Redux?',
        description: 'Объясните, как задать начальное состояние для Store.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 75,
        moduleId: 3,
        title: 'Как подписаться на изменения Store?',
        description: 'Опишите, как подписаться на изменения в Store.',
        type: 'text_input',
        difficulty: 'easy',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Medium
      {
        id: 76,
        moduleId: 3,
        title: 'Как настроить DevTools для Redux Toolkit?',
        description: 'Объясните настройку DevTools с Redux Toolkit.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 77,
        moduleId: 3,
        title: 'Что такое Immer?',
        description: 'Объясните, как Redux Toolkit использует Immer.',
        type: 'text_input',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 78,
        moduleId: 3,
        title: 'Как объединить несколько Reducer-ов?',
        description: 'Опишите, как использовать combineReducers.',
        type: 'multiple_choice',
        difficulty: 'medium',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      // Hard
      {
        id: 79,
        moduleId: 3,
        title: 'Как работают динамические Reducer-ы?',
        description: 'Опишите, как подключать Reducer-ы на лету.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 80,
        moduleId: 3,
        title: 'Что такое Redux Saga?',
        description: 'Опишите, как работает Redux Saga для обработки сайд-эффектов.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 81,
        moduleId: 3,
        title: 'Как реализовать Undo/Redo в Redux?',
        description: 'Приведите пример реализации Undo/Redo в Redux.',
        type: 'text_input',
        difficulty: 'hard',
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.bulkDelete('Tasks', null, {});
  },
};
